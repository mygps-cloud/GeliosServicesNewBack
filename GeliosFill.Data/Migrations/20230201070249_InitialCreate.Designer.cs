// <auto-generated />
using System;
using GeliosFill.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeliosFill.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230201070249_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GeliosFill.Models.FuelFillHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfFill")
                        .HasColumnType("datetime2");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<int>("UserFillInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserFillInfoId");

                    b.ToTable("FuelFillHistories");
                });

            modelBuilder.Entity("GeliosFill.Models.UserFillInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserFillInfos");
                });

            modelBuilder.Entity("GeliosFill.Models.FuelFillHistory", b =>
                {
                    b.HasOne("GeliosFill.Models.UserFillInfo", "UserFillInfo")
                        .WithMany("FuelFillHistories")
                        .HasForeignKey("UserFillInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserFillInfo");
                });

            modelBuilder.Entity("GeliosFill.Models.UserFillInfo", b =>
                {
                    b.Navigation("FuelFillHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
